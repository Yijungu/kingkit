name: Terraform CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ "**" ]       # 필요 시 수정

jobs:
  terraform:
    name: Terraform Apply
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./infra/terraform   # Terraform 코드 위치

    env:
      AWS_ACCESS_KEY_ID:     ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      TF_VAR_region:         "ap-northeast-2"
      TF_VAR_db_name:        "authdb"
      TF_VAR_db_username:    ${{ secrets.DB_USERNAME }}
      TF_VAR_db_password:    ${{ secrets.DB_PASSWORD }}
      TF_VAR_iam_instance_profile: "ec2-ssm-role-profile"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      # ─────────────────────────────────────────────────────────
      # 0. Init (백엔드 & 플러그인 다운로드)
      # ─────────────────────────────────────────────────────────
      - name: Terraform Init
        run: terraform init

      # ─────────────────────────────────────────────────────────
      # 1. IAM 모듈만 우선 적용해 권한 전파
      # ─────────────────────────────────────────────────────────
      - name: Terraform Plan – IAM only
        run: terraform plan -target=module.iam

      - name: Terraform Apply – IAM only
        run: terraform apply -target=module.iam -auto-approve

      # propagation 필요 시 30~60초 정도 대기
      - name: Wait for IAM propagation
        run: sleep 10

      # ─────────────────────────────────────────────────────────
      # 2. 전체 인프라 적용
      # ─────────────────────────────────────────────────────────
      - name: Terraform Plan – full
        run: terraform plan

      - name: Terraform Apply – full
        run: terraform apply -auto-approve
