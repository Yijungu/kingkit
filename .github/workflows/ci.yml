name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ "**" ]

jobs:
  build-test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        java: [ 17 ]

    env:
      SPRING_PROFILES_ACTIVE: test

      # 1) Auth-service용 (JWT 같은 건 필요)
      JWT_SECRET: ${{ secrets.JWT_SECRET }}

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: ${{ matrix.java }}
          cache: gradle

      - name: Grant permission to Gradle wrapper
        run: chmod +x gradlew

      - name: Build and test
        run: ./gradlew clean build jacocoTestReport --no-daemon

      - name: Upload test reports (on failure)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: test-reports
          path: |
            **/build/reports/tests/test
            **/build/reports/spotbugs
            **/build/reports/jacoco/test

      # ✅ 커버리지 리포트 HTML을 항상 확인하고 싶다면 (성공/실패 관계없이)
      # - name: Upload JaCoCo coverage reports
      #   if: always()
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: coverage-reports
      #     path: '**/build/reports/jacoco/test'
