name: CI

# ───────────────────────── 트리거 ─────────────────────────
on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ "**" ]

# ───────────────────────── Job 정의 ──────────────────────
jobs:
  build-test:
    runs-on: ubuntu-latest

    # JDK 17(= 프로젝트 기본), 필요 시 매트릭스 확장 가능
    strategy:
      matrix:
        java: [ 17 ]

    steps:
      # 1) 코드 가져오기
      - name: Check out sources
        uses: actions/checkout@v4

      # 2) JDK 설정 + 캐시
      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: ${{ matrix.java }}
          cache: gradle            # → ~/.gradle 캐싱

      # 3) Gradle Wrapper 권한 부여
      - name: Grant execute permission for Gradle wrapper
        run: chmod +x gradlew

      # 4) 빌드 & 테스트
      - name: Build with Gradle
        run: ./gradlew clean build --no-daemon

      # 5) (선택) 테스트 리포트 아카이빙 - 실패 원인 확인용
      - name: Upload Test Reports
        if: failure()              # 빌드 실패시에만
        uses: actions/upload-artifact@v4
        with:
          name: test-reports
          path: |
            **/build/reports/tests/test
            **/build/reports/spotbugs
          retention-days: 7
